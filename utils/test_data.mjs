const DATA_BLK_1 = [
  0xea, 0x27, 0xf9, 0x9a, 0xae, 0x29, 0x90, 0xe9,
  0x72, 0x5d, 0x7f, 0xa6, 0xa3, 0xfc, 0x2f, 0x70,
  0x67, 0x79, 0x68, 0x80, 0x08, 0x23, 0x53, 0xe4,
  0xe8, 0xc0, 0x28, 0x48, 0x00, 0xb1, 0x95, 0x33,
  0xfe, 0xc1, 0x29, 0x4f, 0x29, 0x1c, 0x1b, 0xc8,
  0xad, 0xea, 0x5a, 0x3b, 0x0a, 0xbf, 0x39, 0x06,
  0xa9, 0x4e, 0xbb, 0x2f, 0x1b, 0xd3, 0xf3, 0x09,
  0xbb, 0x11, 0x45, 0x11, 0xe9, 0x28, 0xa5, 0xdf,
]

const THETA_RESULT = [
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
  0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
  0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
  0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
  0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
  0xd4, 0xda, 0x52, 0x81, 0x68, 0xf4, 0xf0, 0x95,
  0xd4, 0xda, 0x52, 0x81, 0x68, 0xf4, 0xf0, 0x95,
  0x3e, 0xfd, 0xab, 0x1b, 0xc6, 0xdd, 0x60, 0x7c,
  0xa6, 0x87, 0x2d, 0x27, 0xcb, 0x08, 0xdf, 0xe5,
  0xb3, 0xa3, 0x3a, 0x01, 0x60, 0xd7, 0xa3, 0x71,
  0x17, 0xc3, 0xc6, 0xf4, 0x05, 0x47, 0x79, 0x4e,
  0x01, 0xc2, 0xc7, 0xf3, 0x2c, 0xea, 0xf7, 0xb5,
  0x52, 0xe9, 0xb4, 0x87, 0x0f, 0x49, 0xd5, 0x7b,
  0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f, 0x74,
  0x44, 0x12, 0xab, 0xad, 0xec, 0xde, 0x49, 0xa2
]

const RHO_RESULT = [
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0x2d, 0x1e, 0x9e, 0x12, 0xba, 0x9b, 0x4a, 0x50,
  0x75, 0x36, 0x94, 0xa0, 0x5a, 0x3d, 0x3c, 0x25,
  0x81, 0x68, 0xf4, 0xf0, 0x95, 0xd4, 0xda, 0x52,
  0x78, 0x4a, 0xea, 0x6d, 0x29, 0x40, 0xb4, 0x7a,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfe, 0x07, 0xdd, 0x78, 0x0b, 0xed, 0xd8, 0xfb,
  0xfb, 0xfe, 0x07, 0xdd, 0x78, 0x0b, 0xed, 0xd8,
  0xeb, 0xc0, 0x5f, 0x6e, 0xc7, 0xdf, 0xf0, 0x3e,
  0xec, 0x7d, 0xff, 0x03, 0xee, 0xbc, 0x05, 0xf6,
  0xfc, 0x0f, 0xba, 0xf0, 0x17, 0xdb, 0xb1, 0xf7,
  0x8f, 0x4f, 0x09, 0x5d, 0x4d, 0xa5, 0x28, 0x16,
  0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b, 0xa9,
  0x6e, 0xb0, 0x3e, 0x1f, 0x7e, 0xd5, 0x8d, 0xe3,
  0x46, 0xff, 0x2d, 0x34, 0x39, 0x69, 0x3e, 0x58,
  0xa3, 0x3a, 0x01, 0x60, 0xd7, 0xa3, 0x71, 0xb3,
  0xa8, 0xef, 0x29, 0xc2, 0xf8, 0x78, 0xde, 0x80,
  0xaf, 0x7b, 0x50, 0x1c, 0x2c, 0x7f, 0x32, 0xce,
  0x0e, 0x1e, 0x93, 0xaa, 0xf6, 0xa5, 0xd3, 0x69,
  0x74, 0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f,
  0x26, 0x89, 0x10, 0x4a, 0xae, 0xb7, 0xb3, 0x79
]

const PI_RESULT = [
  0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
  0x8f, 0x4f, 0x09, 0x5d, 0x4d, 0xa5, 0x28, 0x16,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0xef, 0x29, 0xc2, 0xf8, 0x78, 0xde, 0x80,
  0xfe, 0x07, 0xdd, 0x78, 0x0b, 0xed, 0xd8, 0xfb,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xaf, 0x7b, 0x50, 0x1c, 0x2c, 0x7f, 0x32, 0xce,
  0xfb, 0xfe, 0x07, 0xdd, 0x78, 0x0b, 0xed, 0xd8,
  0x2d, 0x1e, 0x9e, 0x12, 0xba, 0x9b, 0x4a, 0x50,
  0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b, 0xa9,
  0xeb, 0xc0, 0x5f, 0x6e, 0xc7, 0xdf, 0xf0, 0x3e,
  0x75, 0x36, 0x94, 0xa0, 0x5a, 0x3d, 0x3c, 0x25,
  0x6e, 0xb0, 0x3e, 0x1f, 0x7e, 0xd5, 0x8d, 0xe3,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0e, 0x1e, 0x93, 0xaa, 0xf6, 0xa5, 0xd3, 0x69,
  0x46, 0xff, 0x2d, 0x34, 0x39, 0x69, 0x3e, 0x58,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x74, 0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f,
  0xec, 0x7d, 0xff, 0x03, 0xee, 0xbc, 0x05, 0xf6,
  0x81, 0x68, 0xf4, 0xf0, 0x95, 0xd4, 0xda, 0x52,
  0x26, 0x89, 0x10, 0x4a, 0xae, 0xb7, 0xb3, 0x79,
  0xfc, 0x0f, 0xba, 0xf0, 0x17, 0xdb, 0xb1, 0xf7,
  0x78, 0x4a, 0xea, 0x6d, 0x29, 0x40, 0xb4, 0x7a,
  0xa3, 0x3a, 0x01, 0x60, 0xd7, 0xa3, 0x71, 0xb3,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
]

const CHI_RESULT = [
  0x42, 0x74, 0xfa, 0x6c, 0x16, 0x36, 0x11, 0x15,
  0xdf, 0x4b, 0x8d, 0xfd, 0x1f, 0xa5, 0x24, 0x37,
  0x04, 0x00, 0x38, 0x02, 0x06, 0xd4, 0x00, 0x23,
  0xa8, 0xef, 0x29, 0xc2, 0xf8, 0x78, 0xde, 0x80,
  0xf4, 0x1d, 0x4c, 0x52, 0x1d, 0xe9, 0x08, 0xbb,
  0x04, 0x3f, 0x20, 0x10, 0x38, 0x20, 0x0e, 0x40,
  0xaf, 0x7b, 0x50, 0x1c, 0x2c, 0x7f, 0x32, 0xce,
  0xeb, 0xb8, 0x46, 0x9d, 0xf9, 0x01, 0xcd, 0xc4,
  0xc1, 0x63, 0x61, 0x11, 0x54, 0x27, 0x4f, 0xa6,
  0x35, 0xc5, 0x66, 0x81, 0xe8, 0xb1, 0x23, 0xbb,
  0xcb, 0xc0, 0x4f, 0x24, 0x41, 0x49, 0x71, 0x1f,
  0x89, 0x39, 0x2e, 0x50, 0x4d, 0xe6, 0x8d, 0xd2,
  0x66, 0xb8, 0x9c, 0x37, 0x56, 0x95, 0x1d, 0x83,
  0x03, 0x02, 0x00, 0x60, 0x11, 0x03, 0x70, 0x01,
  0x0e, 0x1e, 0x93, 0xaa, 0xf6, 0xa5, 0xd3, 0x69,
  0x06, 0x8b, 0xc7, 0x10, 0x29, 0x69, 0x3e, 0x5c,
  0x03, 0x40, 0x05, 0x0d, 0x08, 0x24, 0x04, 0x00,
  0x70, 0x56, 0x5d, 0x57, 0x95, 0x8a, 0x25, 0x1e,
  0xe4, 0xb8, 0xd7, 0x81, 0xc6, 0xe4, 0x8b, 0xf6,
  0x75, 0x75, 0xb8, 0xa2, 0x88, 0x3d, 0xd2, 0xe9,
  0x22, 0x82, 0x10, 0x5a, 0x86, 0xb7, 0xbd, 0x39,
  0xdc, 0x3f, 0xea, 0xf0, 0x37, 0x81, 0xa3, 0x3f,
  0x93, 0xf2, 0xac, 0xf0, 0xd0, 0x41, 0x79, 0xbe,
  0xe2, 0x3a, 0x41, 0x71, 0xd3, 0xa4, 0x70, 0x95,
  0x01, 0xc0, 0x22, 0x81, 0xe0, 0x10, 0x23, 0x00,
]

export const testData = {
  thetaC: {
    wasmTestFnName: "theta_c",
    wasmGlobalExportPtrIn: ["DATA_PTR"],
    testData: [DATA_BLK_1],
    wasmGlobalExportPtrOut: "THETA_C_OUT_PTR",
    expected: [
      // Theta C function output (40 bytes)
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0xff, 0x03, 0xee, 0xbc, 0x05, 0xf6, 0xec, 0x7d,
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
    ]
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  thetaD: {
    wasmTestFnName: "theta_d",
    wasmGlobalExportPtrIn: ["THETA_C_OUT_PTR"],
    testData: [
      [
        // Theta C function output (40 bytes)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xff, 0x03, 0xee, 0xbc, 0x05, 0xf6, 0xec, 0x7d,
        0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b
      ]
    ],
    wasmGlobalExportPtrOut: "THETA_D_OUT_PTR",
    expected: [
      // Theta D function output (40 bytes)
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
      0xd4, 0xda, 0x52, 0x81, 0x68, 0xf4, 0xf0, 0x95,
      0xff, 0x03, 0xee, 0xbc, 0x05, 0xf6, 0xec, 0x7d,
    ]
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  thetaXorLoop: {
    wasmTestFnName: "theta_xor_loop",
    wasmGlobalExportPtrIn: ["THETA_D_OUT_PTR", "THETA_A_BLK_PTR"],
    testData: [
      [
        // Theta D function output (40 bytes)
        0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
        0xd4, 0xda, 0x52, 0x81, 0x68, 0xf4, 0xf0, 0x95,
        0xff, 0x03, 0xee, 0xbc, 0x05, 0xf6, 0xec, 0x7d,
      ],
      [
        // A block - Initial input to theta function (200 bytes)
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0xea, 0x27, 0xf9, 0x9a, 0xae, 0x29, 0x90, 0xe9,
        0x72, 0x5d, 0x7f, 0xa6, 0xa3, 0xfc, 0x2f, 0x70,
        0x67, 0x79, 0x68, 0x80, 0x08, 0x23, 0x53, 0xe4,
        0xe8, 0xc0, 0x28, 0x48, 0x00, 0xb1, 0x95, 0x33,
        0xfe, 0xc1, 0x29, 0x4f, 0x29, 0x1c, 0x1b, 0xc8,
        0xad, 0xea, 0x5a, 0x3b, 0x0a, 0xbf, 0x39, 0x06,
        0xa9, 0x4e, 0xbb, 0x2f, 0x1b, 0xd3, 0xf3, 0x09,
        0xbb, 0x11, 0x45, 0x11, 0xe9, 0x28, 0xa5, 0xdf,
      ]
    ],
    wasmGlobalExportPtrOut: "THETA_RESULT_PTR",
    expected: [
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
      0xa9, 0xb4, 0xa5, 0x02, 0xd1, 0xe9, 0xe1, 0x2b,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
      0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
      0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
      0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
      0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
      0xff, 0x81, 0xf7, 0x5e, 0x02, 0xfb, 0x76, 0x3e,
      0xd4, 0xda, 0x52, 0x81, 0x68, 0xf4, 0xf0, 0x95,
      0xd4, 0xda, 0x52, 0x81, 0x68, 0xf4, 0xf0, 0x95,
      0x3e, 0xfd, 0xab, 0x1b, 0xc6, 0xdd, 0x60, 0x7c,
      0xa6, 0x87, 0x2d, 0x27, 0xcb, 0x08, 0xdf, 0xe5,
      0xb3, 0xa3, 0x3a, 0x01, 0x60, 0xd7, 0xa3, 0x71,
      0x17, 0xc3, 0xc6, 0xf4, 0x05, 0x47, 0x79, 0x4e,
      0x01, 0xc2, 0xc7, 0xf3, 0x2c, 0xea, 0xf7, 0xb5,
      0x52, 0xe9, 0xb4, 0x87, 0x0f, 0x49, 0xd5, 0x7b,
      0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f, 0x74,
      0x44, 0x12, 0xab, 0xad, 0xec, 0xde, 0x49, 0xa2
    ]
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  testTheta: {
    wasmTestFnName: "test_theta",
    wasmGlobalExportPtrIn: ["DATA_PTR"],
    testData: [DATA_BLK_1],
    wasmGlobalExportPtrOut: "THETA_RESULT_PTR",
    expected: THETA_RESULT
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  rho: {
    wasmTestFnName: "rho",
    wasmGlobalExportPtrIn: ["THETA_RESULT_PTR"],
    testData: [THETA_RESULT],
    wasmGlobalExportPtrOut: "RHO_RESULT_PTR",
    expected: RHO_RESULT
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  pi: {
    wasmTestFnName: "pi",
    wasmGlobalExportPtrIn: ["RHO_RESULT_PTR"],
    testData: [RHO_RESULT],
    wasmGlobalExportPtrOut: "PI_RESULT_PTR",
    expected: PI_RESULT
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  chi: {
    wasmTestFnName: "chi",
    wasmGlobalExportPtrIn: ["PI_RESULT_PTR"],
    testData: [PI_RESULT],
    wasmGlobalExportPtrOut: "CHI_RESULT_PTR",
    expected: CHI_RESULT
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  iota: {
    wasmTestFnName: "test_iota",
    wasmGlobalExportPtrIn: ["CHI_RESULT_PTR"],
    testData: [
      [
        0x42, 0x74, 0xfa, 0x6c, 0x16, 0x36, 0x11, 0x15,
        0xdf, 0x4b, 0x8d, 0xfd, 0x1f, 0xa5, 0x24, 0x37,
        0x04, 0x00, 0x38, 0x02, 0x06, 0xd4, 0x00, 0x23,
        0xa8, 0xef, 0x29, 0xc2, 0xf8, 0x78, 0xde, 0x80,
        0xf4, 0x1d, 0x4c, 0x52, 0x1d, 0xe9, 0x08, 0xbb,
        0x04, 0x3f, 0x20, 0x10, 0x38, 0x20, 0x0e, 0x40,
        0xaf, 0x7b, 0x50, 0x1c, 0x2c, 0x7f, 0x32, 0xce,
        0xeb, 0xb8, 0x46, 0x9d, 0xf9, 0x01, 0xcd, 0xc4,
        0xc1, 0x63, 0x61, 0x11, 0x54, 0x27, 0x4f, 0xa6,
        0x35, 0xc5, 0x66, 0x81, 0xe8, 0xb1, 0x23, 0xbb,
        0xcb, 0xc0, 0x4f, 0x24, 0x41, 0x49, 0x71, 0x1f,
        0x89, 0x39, 0x2e, 0x50, 0x4d, 0xe6, 0x8d, 0xd2,
        0x66, 0xb8, 0x9c, 0x37, 0x56, 0x95, 0x1d, 0x83,
        0x03, 0x02, 0x00, 0x60, 0x11, 0x03, 0x70, 0x01,
        0x0e, 0x1e, 0x93, 0xaa, 0xf6, 0xa5, 0xd3, 0x69,
        0xcf, 0xcb, 0x88, 0x34, 0x68, 0x21, 0x7e, 0x5a,
        0x03, 0x40, 0x01, 0x0d, 0x48, 0x24, 0x08, 0x00,
        0x74, 0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f,
        0xe4, 0xb8, 0xd7, 0x81, 0xc6, 0xe4, 0x8b, 0xf6,
        0x7f, 0x6f, 0x29, 0x88, 0x9e, 0x39, 0x02, 0xa9,
        0x26, 0x89, 0x10, 0x4a, 0xae, 0xb7, 0xb3, 0x79,
        0xdc, 0x3f, 0xea, 0xf0, 0x37, 0x81, 0xa3, 0x3f,
        0x83, 0xb4, 0xed, 0xb0, 0x51, 0x4b, 0x59, 0xa2,
        0xa6, 0x2a, 0x97, 0x70, 0xd5, 0x20, 0x71, 0xe3,
        0x00, 0xa0, 0x02, 0x81, 0xe0, 0x00, 0x23, 0x00,
      ]
    ],
    wasmGlobalExportPtrOut: "CHI_RESULT_PTR",
    expected: [
      0x42, 0x74, 0xfa, 0x6c, 0x16, 0x36, 0x11, 0x14,
      0xdf, 0x4b, 0x8d, 0xfd, 0x1f, 0xa5, 0x24, 0x37,
      0x04, 0x00, 0x38, 0x02, 0x06, 0xd4, 0x00, 0x23,
      0xa8, 0xef, 0x29, 0xc2, 0xf8, 0x78, 0xde, 0x80,
      0xf4, 0x1d, 0x4c, 0x52, 0x1d, 0xe9, 0x08, 0xbb,
      0x04, 0x3f, 0x20, 0x10, 0x38, 0x20, 0x0e, 0x40,
      0xaf, 0x7b, 0x50, 0x1c, 0x2c, 0x7f, 0x32, 0xce,
      0xeb, 0xb8, 0x46, 0x9d, 0xf9, 0x01, 0xcd, 0xc4,
      0xc1, 0x63, 0x61, 0x11, 0x54, 0x27, 0x4f, 0xa6,
      0x35, 0xc5, 0x66, 0x81, 0xe8, 0xb1, 0x23, 0xbb,
      0xcb, 0xc0, 0x4f, 0x24, 0x41, 0x49, 0x71, 0x1f,
      0x89, 0x39, 0x2e, 0x50, 0x4d, 0xe6, 0x8d, 0xd2,
      0x66, 0xb8, 0x9c, 0x37, 0x56, 0x95, 0x1d, 0x83,
      0x03, 0x02, 0x00, 0x60, 0x11, 0x03, 0x70, 0x01,
      0x0e, 0x1e, 0x93, 0xaa, 0xf6, 0xa5, 0xd3, 0x69,
      0xcf, 0xcb, 0x88, 0x34, 0x68, 0x21, 0x7e, 0x5a,
      0x03, 0x40, 0x01, 0x0d, 0x48, 0x24, 0x08, 0x00,
      0x74, 0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f,
      0xe4, 0xb8, 0xd7, 0x81, 0xc6, 0xe4, 0x8b, 0xf6,
      0x7f, 0x6f, 0x29, 0x88, 0x9e, 0x39, 0x02, 0xa9,
      0x26, 0x89, 0x10, 0x4a, 0xae, 0xb7, 0xb3, 0x79,
      0xdc, 0x3f, 0xea, 0xf0, 0x37, 0x81, 0xa3, 0x3f,
      0x83, 0xb4, 0xed, 0xb0, 0x51, 0x4b, 0x59, 0xa2,
      0xa6, 0x2a, 0x97, 0x70, 0xd5, 0x20, 0x71, 0xe3,
      0x00, 0xa0, 0x02, 0x81, 0xe0, 0x00, 0x23, 0x00,
    ]
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  testKeccak1: {
    wasmTestFnName: "test_keccak",
    wasmTestFnArgs: [1],
    wasmGlobalExportPtrIn: ["DATA_PTR"],
    testData: [
      [
        0xea, 0x27, 0xf9, 0x9a, 0xae, 0x29, 0x90, 0xe9,
        0x72, 0x5d, 0x7f, 0xa6, 0xa3, 0xfc, 0x2f, 0x70,
        0x67, 0x79, 0x68, 0x80, 0x08, 0x23, 0x53, 0xe4,
        0xe8, 0xc0, 0x28, 0x48, 0x00, 0xb1, 0x95, 0x33,
        0xfe, 0xc1, 0x29, 0x4f, 0x29, 0x1c, 0x1b, 0xc8,
        0xad, 0xea, 0x5a, 0x3b, 0x0a, 0xbf, 0x39, 0x06,
        0xa9, 0x4e, 0xbb, 0x2f, 0x1b, 0xd3, 0xf3, 0x09,
        0xbb, 0x11, 0x45, 0x11, 0xe9, 0x28, 0xa5, 0xdf,
      ]
    ],
    wasmGlobalExportPtrOut: "CHI_RESULT_PTR",
    expected: [
      0x42, 0x74, 0xfa, 0x6c, 0x16, 0x36, 0x11, 0x14,
      0xdf, 0x4b, 0x8d, 0xfd, 0x1f, 0xa5, 0x24, 0x37,
      0x04, 0x00, 0x38, 0x02, 0x06, 0xd4, 0x00, 0x23,
      0xa8, 0xef, 0x29, 0xc2, 0xf8, 0x78, 0xde, 0x80,
      0xf4, 0x1d, 0x4c, 0x52, 0x1d, 0xe9, 0x08, 0xbb,
      0x04, 0x3f, 0x20, 0x10, 0x38, 0x20, 0x0e, 0x40,
      0xaf, 0x7b, 0x50, 0x1c, 0x2c, 0x7f, 0x32, 0xce,
      0xeb, 0xb8, 0x46, 0x9d, 0xf9, 0x01, 0xcd, 0xc4,
      0xc1, 0x63, 0x61, 0x11, 0x54, 0x27, 0x4f, 0xa6,
      0x35, 0xc5, 0x66, 0x81, 0xe8, 0xb1, 0x23, 0xbb,
      0xcb, 0xc0, 0x4f, 0x24, 0x41, 0x49, 0x71, 0x1f,
      0x89, 0x39, 0x2e, 0x50, 0x4d, 0xe6, 0x8d, 0xd2,
      0x66, 0xb8, 0x9c, 0x37, 0x56, 0x95, 0x1d, 0x83,
      0x03, 0x02, 0x00, 0x60, 0x11, 0x03, 0x70, 0x01,
      0x0e, 0x1e, 0x93, 0xaa, 0xf6, 0xa5, 0xd3, 0x69,
      0xcf, 0xcb, 0x88, 0x34, 0x68, 0x21, 0x7e, 0x5a,
      0x03, 0x40, 0x01, 0x0d, 0x48, 0x24, 0x08, 0x00,
      0x74, 0x56, 0x4d, 0x55, 0x93, 0x1e, 0x25, 0x1f,
      0xe4, 0xb8, 0xd7, 0x81, 0xc6, 0xe4, 0x8b, 0xf6,
      0x7f, 0x6f, 0x29, 0x88, 0x9e, 0x39, 0x02, 0xa9,
      0x26, 0x89, 0x10, 0x4a, 0xae, 0xb7, 0xb3, 0x79,
      0xdc, 0x3f, 0xea, 0xf0, 0x37, 0x81, 0xa3, 0x3f,
      0x83, 0xb4, 0xed, 0xb0, 0x51, 0x4b, 0x59, 0xa2,
      0xa6, 0x2a, 0x97, 0x70, 0xd5, 0x20, 0x71, 0xe3,
      0x00, 0xa0, 0x02, 0x81, 0xe0, 0x00, 0x23, 0x00,
    ]
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  testKeccak2: {
    wasmTestFnName: "test_keccak",
    wasmTestFnArgs: [2],
    wasmGlobalExportPtrIn: ["DATA_PTR"],
    testData: [
      [
        0xea, 0x27, 0xf9, 0x9a, 0xae, 0x29, 0x90, 0xe9,
        0x72, 0x5d, 0x7f, 0xa6, 0xa3, 0xfc, 0x2f, 0x70,
        0x67, 0x79, 0x68, 0x80, 0x08, 0x23, 0x53, 0xe4,
        0xe8, 0xc0, 0x28, 0x48, 0x00, 0xb1, 0x95, 0x33,
        0xfe, 0xc1, 0x29, 0x4f, 0x29, 0x1c, 0x1b, 0xc8,
        0xad, 0xea, 0x5a, 0x3b, 0x0a, 0xbf, 0x39, 0x06,
        0xa9, 0x4e, 0xbb, 0x2f, 0x1b, 0xd3, 0xf3, 0x09,
        0xbb, 0x11, 0x45, 0x11, 0xe9, 0x28, 0xa5, 0xdf,
      ]
    ],
    wasmGlobalExportPtrOut: "CHI_RESULT_PTR",
    expected: [
      0x96, 0xac, 0x9f, 0x02, 0xc5, 0x11, 0xeb, 0x12,
      0x7b, 0x5e, 0x64, 0xcb, 0x8f, 0xc5, 0x58, 0x9b,
      0x7a, 0x6c, 0xcc, 0xe9, 0xae, 0x4c, 0x67, 0x34,
      0xb9, 0xf5, 0x8f, 0x34, 0x60, 0xcc, 0x23, 0xe1,
      0x06, 0xd4, 0x50, 0xc3, 0xfa, 0x39, 0xb5, 0x9b,
      0x73, 0x1f, 0xb6, 0x32, 0xd6, 0xdc, 0xfb, 0x7c,
      0x09, 0xef, 0xfc, 0xf0, 0xf8, 0x99, 0x03, 0x8c,
      0xeb, 0x3d, 0x25, 0xbd, 0x86, 0x8c, 0xd4, 0x89,
      0x7e, 0x08, 0x2f, 0x8b, 0x18, 0x95, 0x68, 0x0d,
      0xcb, 0xe3, 0xa4, 0x7b, 0xb1, 0xec, 0x53, 0xda,
      0xb1, 0x5f, 0x47, 0xdc, 0x79, 0xe5, 0x0c, 0x5e,
      0xab, 0x57, 0xd6, 0xa7, 0x8c, 0x9d, 0x07, 0xd4,
      0x33, 0xf5, 0xf7, 0x4e, 0x68, 0xd6, 0xad, 0x30,
      0xdf, 0xa0, 0xa5, 0x8c, 0xbe, 0xc3, 0x2d, 0xaf,
      0xb8, 0x96, 0xf8, 0xbd, 0x49, 0x2a, 0xc9, 0xf7,
      0x4e, 0x32, 0xb2, 0x57, 0x39, 0x0e, 0xa8, 0x90,
      0xda, 0xab, 0x21, 0xfd, 0x60, 0xb4, 0x90, 0x1e,
      0x37, 0x84, 0x08, 0xec, 0xbf, 0xdc, 0x97, 0x43,
      0x15, 0x41, 0x8b, 0xc0, 0xb2, 0x6f, 0x59, 0xe9,
      0x72, 0xd5, 0x6f, 0xd0, 0x4b, 0x6f, 0xbe, 0x19,
      0x32, 0x13, 0x3d, 0xe9, 0x0d, 0x6b, 0x2d, 0xf8,
      0x43, 0xc7, 0x4c, 0xca, 0xa3, 0x0b, 0x6b, 0x86,
      0x1d, 0x9e, 0x49, 0x35, 0x58, 0xde, 0xa9, 0x7a,
      0x34, 0x44, 0xde, 0x97, 0xd8, 0x1b, 0x91, 0x97,
      0x30, 0x0a, 0x1a, 0xc9, 0xb6, 0xee, 0x3a, 0x24,
    ]
  },
  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  testKeccak24: {
    wasmTestFnName: "test_keccak",
    wasmTestFnArgs: [24],
    wasmGlobalExportPtrIn: ["DATA_PTR"],
    testData: [
      [
        0xea, 0x27, 0xf9, 0x9a, 0xae, 0x29, 0x90, 0xe9,
        0x72, 0x5d, 0x7f, 0xa6, 0xa3, 0xfc, 0x2f, 0x70,
        0x67, 0x79, 0x68, 0x80, 0x08, 0x23, 0x53, 0xe4,
        0xe8, 0xc0, 0x28, 0x48, 0x00, 0xb1, 0x95, 0x33,
        0xfe, 0xc1, 0x29, 0x4f, 0x29, 0x1c, 0x1b, 0xc8,
        0xad, 0xea, 0x5a, 0x3b, 0x0a, 0xbf, 0x39, 0x06,
        0xa9, 0x4e, 0xbb, 0x2f, 0x1b, 0xd3, 0xf3, 0x09,
        0xbb, 0x11, 0x45, 0x11, 0xe9, 0x28, 0xa5, 0xdf,
      ]
    ],
    wasmGlobalExportPtrOut: "CAPACITY_PTR",
    expected: [
      // Capacity - 136 byte
      0xa6, 0x05, 0x72, 0x18, 0xf5, 0x0b, 0x33, 0xea, 0xac, 0x64, 0x7a, 0x92, 0x7e, 0xc2, 0x68, 0xf1, 0x53,
      0xd7, 0x47, 0x6e, 0xe2, 0x48, 0xe7, 0x22, 0xa9, 0x67, 0xda, 0x67, 0xda, 0x82, 0x1e, 0x71, 0xe8, 0x16,
      0x0c, 0x6f, 0x86, 0xce, 0x05, 0x4f, 0xd8, 0x62, 0x51, 0x87, 0xcb, 0x30, 0x21, 0x45, 0x16, 0x40, 0xb0,
      0x83, 0x63, 0x23, 0xd7, 0xdb, 0xeb, 0x64, 0xc7, 0x11, 0x58, 0xca, 0x11, 0x6c, 0x8a, 0xf5, 0x45, 0xd2,
      0x2a, 0x18, 0x98, 0x86, 0x62, 0xdd, 0x44, 0x84, 0x14, 0x04, 0x2d, 0xbf, 0x62, 0xed, 0xfd, 0x78, 0xe1,
      0x28, 0x2d, 0x3f, 0x3f, 0x67, 0x59, 0x24, 0xc6, 0xe2, 0x31, 0x83, 0xb8, 0xa1, 0x9f, 0x0b, 0x0b, 0xa5,
      0x9b, 0x33, 0xa4, 0xb5, 0x75, 0x0e, 0xfc, 0x6d, 0x2b, 0xcc, 0xf9, 0x6a, 0xde, 0x01, 0xc4, 0x6e, 0xf6,
      0x07, 0x8a, 0xb9, 0x73, 0x3f, 0x61, 0x20, 0x83, 0x30, 0x81, 0xf3, 0xdc, 0x33, 0x09, 0xfe, 0x2e, 0xa8,

      // Rate - 64 bytes
      0x49, 0x32, 0xba, 0x0b, 0x46, 0x75, 0x1c, 0x23,
      0x96, 0x9e, 0xfd, 0xd8, 0x5d, 0x65, 0x09, 0x24,
      0xd4, 0xcf, 0x41, 0x01, 0xd6, 0x32, 0x5b, 0x11,
      0xe5, 0x8d, 0x66, 0x3a, 0x04, 0x5c, 0x5d, 0xb8,
      0xdc, 0xf4, 0x8b, 0xd8, 0x87, 0x3f, 0x1d, 0x86,
      0x26, 0x2a, 0xd4, 0xb2, 0x97, 0x8c, 0xef, 0x89,
      0x10, 0x2f, 0xbc, 0xfb, 0x14, 0x76, 0x07, 0x74,
      0xe2, 0x0a, 0x40, 0xba, 0xac, 0x6f, 0x5b, 0x74,
    ]
  },
}
